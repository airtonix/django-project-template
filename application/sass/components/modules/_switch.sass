

=switch($classname: "onoffswitch",
        $borderColor: #fff,
        $borderWidth: 2px,
        $activeBgColor: #2FCCFF,
        $activeTextColor: #fff,
        $activeText: "ON",
        $inactiveTextColor: #999,
        $inactiveBgColor: #eee,
        $inactiveText: "OFF",
        $toggleBgColor: #fff,
        $toggleBorderColor: #fff)

    position: relative
    width: 96px
    +experimental(user-select,none)

    label
        display: block
        overflow: hidden
        cursor: pointer
        border: $borderWidth solid #FFFFFF
        border-radius: 50px

        .inner
            width: 200%
            margin-left: -100%
            +transition(margin 0.3s ease-in 0s)
            &:before, &:after
                +box-sizing(border-box)
                float: left
                width: 50%
                height: 24px
                padding: 0
                line-height: 24px
                font-size: 14px
                color: white
                font-weight: bold

            &:before
                padding-left: 25px
                content: $activeText
                color: $activeTextColor
                background-color: $activeBgColor

            &:after
                padding-right: 25px
                content: $inactiveText
                color: $inactiveTextColor
                background-color: $inactiveBgColor
                text-align: right

        .toggle
            +transition(all 0.3s ease-in 0s)
            width: 13px
            margin: 5.5px
            background: $toggleBgColor
            border: $borderWidth solid $toggleBorderColor
            border-radius: 50px
            position: absolute
            top: 0
            bottom: 0
            right: 68px

    input[type=checkbox]
        display: none

        &:checked + label
            .inner
                margin-left: 0
            .switch
                right: 0px


// // Styles for modern browsers
@media only screen
  // //      Multiple State Switch
  // // Up-Down padding for the regular switch
  // $regularBase: 10px
  // // Class names for the multiple states
  // $switchStates: 3, 4, 5
  // // Generate the class names for the multiple states
  // $switchClasses: ()
  // @each $switch in $switchStates
  //   $switchClasses: join($switchClasses, unquote(".switch-#{$switch}"), comma)
  // $switchClasses: join(unquote(".switch"), $switchClasses, comma)
  // // Two-state switch and shared styles between all states
  // #{$switchClasses}
  //   position: relative
  //   padding: 0
  //   display: block
  //   width: 100%
  //   overflow: hidden
  //   // Sizes
  //   &.large label
  //     padding: $largeBtnBase 0
  //     font-size: ms(1)
  //   &.small label
  //     font-size: ms(0) - 3
  //     padding: $smallBtnBase 0
  //   &.tiny label
  //     font-size: ms(0) - 4
  //     padding: $tinyBtnBase 0
  //   label
  //     position: relative
  //     z-index: 2
  //     float: left
  //     width: 50%
  //     height: 100%
  //     margin: 0
  //     padding: $regularBase 0
  //     font-size: ms(0)
  //     font-weight: bold
  //     text-align: center
  //   .slide-button
  //     position: absolute
  //     top: 0
  //     left: 0
  //     z-index: 1
  //     display: block
  //     width: 50%
  //     height: 100%
  //     padding: 0
  //     +transition-property(all)
  //     +transition-duration(0.3s)
  //     +transition-timing-function(ease-out)
  //   input
  //     position: absolute
  //     opacity: 0
  //   // Outline the toggles when the inputs are focused
  //   input:focus + label
  //     outline: 1px dotted #888888
  //   input:last-of-type:checked ~ .slide-button
  //     left: 50%
  //   // Bugfix for older Webkit, including mobile Webkit. Adapted from:
  //    * http://css-tricks.com/webkit-sibling-bug/
  //   -webkit-animation: webkitSiblingBugfix infinite 1s
  // @-webkit-keyframes webkitSiblingBugfix
  //   from
  //     position: relative
  //   to
  //     position: relative

  // // Generate styles for the multiple states
  // @for $i from 1 through length($switchStates)
  //   $state: nth($switchStates, $i)
  //   $width: 100 / ($i + 2)
  //   .switch-#{$state}
  //     label,
  //     .slide-button
  //       width: $width * 1%
  //   @for $j from 2 through $i + 1
  //     .switch-#{$state} input:checked:nth-of-type(#{$j}) ~ .slide-button
  //       left: $width * ($j - 1) * 1%
  //   .switch-#{$state} input:checked:last-of-type ~ .slide-button
  //     left: 100 - $width * 1%



    .switch
        &.simple
            +switch()